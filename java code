package javaproj;
import net.sourceforge.tess4j.*;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.chart.plot.PlotOrientation;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.sql.*;
import java.io.File;

public class ImageDataGraph {
    private static final String DB_URL = "jdbc:mysql://localhost:3306/image_data";
    private static final String USER = "root";
    private static final String PASS = "Nigamasree.27";
    public static void main(String[] args) {
        // Create the GUI window
        JFrame frame = new JFrame("DATA VISUALIZATION SOFTWARE");
        frame.setSize(600, 500);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new BorderLayout(20, 20));

        JPanel buttonPanel = new JPanel();
        buttonPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 20, 10));
        // Create buttons
        JButton uploadButton = new JButton("UPLOAD IMAGE");
        JButton generateGraphButton = new JButton("GENERATE GRAPH");

        buttonPanel.add(uploadButton);
        buttonPanel.add(generateGraphButton);
        JLabel displayLabel = new JLabel();
        displayLabel.setPreferredSize(new Dimension(400, 300));
        displayLabel.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY, 2));
        displayLabel.setHorizontalAlignment(JLabel.CENTER);
        displayLabel.setBackground(Color.WHITE);
        displayLabel.setOpaque(true);

        frame.add(buttonPanel, BorderLayout.NORTH);
        frame.add(displayLabel, BorderLayout.CENTER);

        // Create footer for branding
        JPanel footerPanel = new JPanel();
        footerPanel.setBackground(new Color(60, 63, 65));
        JLabel footerLabel = new JLabel("Â© 2024 Data Manager | Powered by AI", JLabel.CENTER);
        footerLabel.setForeground(Color.WHITE);
        footerPanel.add(footerLabel);
        frame.add(footerPanel, BorderLayout.SOUTH);

        // Action listener for uploading an image
        uploadButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("Select an Image");
                int result = fileChooser.showOpenDialog(frame);

                if (result == JFileChooser.APPROVE_OPTION) {
                    File selectedFile = fileChooser.getSelectedFile();
                    try {
                        // Display image
                        ImageIcon imageIcon = new ImageIcon(selectedFile.getPath());
                        Image image = imageIcon.getImage().getScaledInstance(400, 300, Image.SCALE_SMOOTH);
                        displayLabel.setIcon(new ImageIcon(image));

                        // Extract and store text in MySQL
                        String extractedText = extractTextFromImage(selectedFile.getPath());
                        storeDataInMySQL(extractedText);
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
            }
        });
        // Action listener for generating a graph
        generateGraphButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    DefaultCategoryDataset dataset = fetchDataFromMySQLAndCreateDataset();
                    createGraphFromDataset(dataset);
                } catch (SQLException ex) {
                    ex.printStackTrace();   
                }
            }
        });

        frame.setVisible(true);
    }

    // Function to extract text using Tesseract
    private static String extractTextFromImage(String imagePath) throws Exception {
        ITesseract tesseract = new Tesseract();
        tesseract.setDatapath("C:\\Program Files\\Tesseract-OCR\\tessdata"); // Path to tessdata folder
        tesseract.setLanguage("eng");
        File imageFile = new File(imagePath);

        // Extract text
        String text = tesseract.doOCR(imageFile);
        System.out.println("Extracted Text: " + text);
        return text;
    }

    // Function to store extracted data in MySQL
    private static void storeDataInMySQL(String content) throws SQLException {
        Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);
        String query = "INSERT INTO extracted_data (content) VALUES (?)";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setString(1, content);
        pstmt.executeUpdate();
        System.out.println("Data inserted into MySQL");
        pstmt.close();
        conn.close();
    }

    // Function to fetch data from MySQL and create dataset
    private static DefaultCategoryDataset fetchDataFromMySQLAndCreateDataset() throws SQLException {
        Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT * FROM extracted_data");

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        int index = 1;

        while (rs.next()) {
            String content = rs.getString("content");
            dataset.addValue(content.length(), "Data Length", "Entry " + index);
            index++;
        }

        rs.close();
        stmt.close();
        conn.close();

        return dataset;
    }

    // Function to create a bar chart using JFreeChart
    private static void createGraphFromDataset(DefaultCategoryDataset dataset) {
        JFreeChart barChart = ChartFactory.createBarChart(
                "Data Length Analysis",
                "Entry Number",
                "Text Length",
                dataset,
                PlotOrientation.VERTICAL,
                true, true, false);

        // Display the graph in a new JFrame
        ChartPanel chartPanel = new ChartPanel(barChart);
        chartPanel.setPreferredSize(new Dimension(800, 600));
        JFrame chartFrame = new JFrame("Graph");
        chartFrame.setContentPane(chartPanel);
        chartFrame.setSize(800, 600);
        chartFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        chartFrame.setVisible(true);
    }
}
